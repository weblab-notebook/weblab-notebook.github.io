{"version":3,"file":"component---src-pages-reset-password-js-1dea608725b7014ca598.js","mappings":"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","sources":["webpack://weblab-website/./lib/es6/src/pagesComponents/ResetPassword.bs.js","webpack://weblab-website/./src/pages/reset-password.js"],"sourcesContent":["// Generated by ReScript, PLEASE EDIT WITH CARE\n\nimport * as Curry from \"rescript/lib/es6/curry.js\";\nimport * as React from \"react\";\nimport * as Js_exn from \"rescript/lib/es6/js_exn.js\";\nimport * as Belt_Option from \"rescript/lib/es6/belt_Option.js\";\nimport * as Theme$Weblab from \"../service/Theme.bs.js\";\nimport * as ReactHelmet from \"react-helmet\";\nimport * as LoginBase$Weblab from \"../components/LoginBase.bs.js\";\nimport * as Core from \"@material-ui/core\";\nimport * as Caml_js_exceptions from \"rescript/lib/es6/caml_js_exceptions.js\";\nimport * as SupabaseClient$Weblab from \"../bindings/supabase/SupabaseClient.bs.js\";\nimport * as Styles from \"@material-ui/core/styles\";\nimport Weblab_logoSvg from \"/src/assets/svg/weblab_logo.svg\";\n\nvar theme = Styles.createTheme(Theme$Weblab.getThemeProto(false));\n\nfunction loginReducer(state, action) {\n  if (typeof action === \"number\") {\n    return {\n            password: \"\",\n            secondPassword: \"\"\n          };\n  } else if (action.TAG === /* ChangePassword */0) {\n    return {\n            password: action._0,\n            secondPassword: state.secondPassword\n          };\n  } else {\n    return {\n            password: state.password,\n            secondPassword: action._0\n          };\n  }\n}\n\nfunction ResetPassword(Props) {\n  var $$location = Props.location;\n  var match = React.useReducer(loginReducer, {\n        password: \"\",\n        secondPassword: \"\"\n      });\n  var resetDispatch = match[1];\n  var reset = match[0];\n  var match$1 = React.useState(function () {\n        \n      });\n  var setResetAlert = match$1[1];\n  var resetAlert = match$1[0];\n  var match$2 = React.useState(function () {\n        \n      });\n  var setAccessToken = match$2[1];\n  var accessToken = match$2[0];\n  var match$3 = React.useState(function () {\n        return false;\n      });\n  var setLoading = match$3[1];\n  React.useEffect((function () {\n          var params = new URLSearchParams($$location.hash.replace(\"#\", \"\"));\n          var access_tokenOption = params.get(\"access_token\");\n          var typeOption = params.get(\"type\");\n          if (!(typeOption == null) && !(access_tokenOption == null) && typeOption === \"recovery\") {\n            Curry._1(setAccessToken, (function (param) {\n                    return access_tokenOption;\n                  }));\n          }\n          \n        }), []);\n  return React.createElement(Styles.ThemeProvider, {\n              children: null,\n              theme: theme\n            }, React.createElement(ReactHelmet.Helmet, {\n                  children: null\n                }, React.createElement(\"link\", {\n                      href: \"/favicon.png\",\n                      rel: \"icon\",\n                      type: \"image/png\"\n                    }), React.createElement(\"title\", undefined, \"Weblab Password Reset\")), React.createElement(Core.Box, {\n                  style: {\n                    bottom: \"0\",\n                    left: \"0\",\n                    position: \"absolute\",\n                    right: \"0\",\n                    top: \"0\"\n                  },\n                  children: null,\n                  height: \"40%\",\n                  margin: \"auto\",\n                  width: \"40%\"\n                }, React.createElement(Core.Typography, {\n                      align: \"center\",\n                      children: null,\n                      color: \"primary\",\n                      variant: \"h3\",\n                      style: {\n                        fontWeight: \"700\",\n                        marginBottom: \"32px\"\n                      }\n                    }, React.createElement(Core.Box, {\n                          clone: true,\n                          children: React.createElement(Weblab_logoSvg, {}),\n                          height: 64,\n                          width: 64\n                        }), \"Web\", React.createElement(Core.Box, {\n                          style: {\n                            color: theme.palette.secondary.main\n                          },\n                          children: \"lab\",\n                          display: \"inline\"\n                        })), accessToken !== undefined ? React.createElement(Core.Box, {\n                        clone: true,\n                        children: React.createElement(\"form\", {\n                              onSubmit: (function (evt) {\n                                  evt.preventDefault();\n                                  if (LoginBase$Weblab.samePassword(reset.password, reset.secondPassword)) {\n                                    if (LoginBase$Weblab.strongPassword(reset.password)) {\n                                      Curry._1(setLoading, (function (param) {\n                                              return true;\n                                            }));\n                                      SupabaseClient$Weblab.supabase.auth.api.updateUser(accessToken, {\n                                                password: reset.password\n                                              }).then(function (response) {\n                                              var error = response.error;\n                                              if (error == null) {\n                                                Curry._1(setLoading, (function (param) {\n                                                        return false;\n                                                      }));\n                                                Curry._1(resetDispatch, /* Clear */0);\n                                                return Promise.resolve(undefined);\n                                              } else {\n                                                return Promise.reject(Js_exn.raiseError(error.message));\n                                              }\n                                            }).catch(function (error) {\n                                            Curry._1(setLoading, (function (param) {\n                                                    return false;\n                                                  }));\n                                            Curry._1(setResetAlert, (function (param) {\n                                                    return Belt_Option.getWithDefault(Belt_Option.flatMap(Caml_js_exceptions.caml_as_js_exn(Js_exn.anyToExnInternal(error)), (function (prim) {\n                                                                      return prim.message;\n                                                                    })), \"Log in failed.\");\n                                                  }));\n                                            return Promise.resolve(undefined);\n                                          });\n                                      return ;\n                                    } else {\n                                      return Curry._1(setResetAlert, (function (param) {\n                                                    return \"Password must be at least 8 characters long and must contain at least one uppercase letter, one lowercase letter, one digit and one special character.\";\n                                                  }));\n                                    }\n                                  } else {\n                                    return Curry._1(setResetAlert, (function (param) {\n                                                  return \"Both passwords must be the same.\";\n                                                }));\n                                  }\n                                })\n                            }, React.createElement(Core.FormGroup, {\n                                  children: React.createElement(Core.FormControlLabel, {\n                                        control: React.createElement(Core.TextField, {\n                                              margin: \"dense\",\n                                              type: \"password\",\n                                              variant: \"outlined\"\n                                            }),\n                                        label: React.createElement(Core.FormLabel, {\n                                              children: \"New Password\"\n                                            }),\n                                        labelPlacement: \"top\",\n                                        onChange: (function (evt) {\n                                            return Curry._1(resetDispatch, {\n                                                        TAG: /* ChangePassword */0,\n                                                        _0: evt.currentTarget.value\n                                                      });\n                                          }),\n                                        value: reset.password\n                                      })\n                                }), React.createElement(Core.FormGroup, {\n                                  children: React.createElement(Core.FormControlLabel, {\n                                        control: React.createElement(Core.TextField, {\n                                              margin: \"dense\",\n                                              type: \"password\",\n                                              variant: \"outlined\"\n                                            }),\n                                        label: React.createElement(Core.FormLabel, {\n                                              children: \"Repeat Password\"\n                                            }),\n                                        labelPlacement: \"top\",\n                                        onChange: (function (evt) {\n                                            return Curry._1(resetDispatch, {\n                                                        TAG: /* ChangeSecondPassword */1,\n                                                        _0: evt.currentTarget.value\n                                                      });\n                                          }),\n                                        value: reset.secondPassword\n                                      })\n                                }), resetAlert !== undefined ? React.createElement(Core.Typography, {\n                                    children: resetAlert,\n                                    color: \"error\",\n                                    display: \"initial\"\n                                  }) : null, React.createElement(Core.Button, {\n                                  style: {\n                                    margin: \"16px\"\n                                  },\n                                  children: \"Reset Password\",\n                                  color: \"primary\",\n                                  disabled: match$3[0],\n                                  type: \"submit\",\n                                  variant: \"contained\"\n                                })),\n                        alignItems: \"center\",\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        gridGap: 24\n                      }) : React.createElement(Core.Typography, {\n                        align: \"center\",\n                        children: \"The URL is incorrect. Request another reset link.\"\n                      })));\n}\n\nResetPassword.displayName = \"ResetPassword\";\n\nvar supabase = SupabaseClient$Weblab.supabase;\n\nvar make = ResetPassword;\n\nvar $$default = ResetPassword;\n\nexport {\n  theme ,\n  supabase ,\n  loginReducer ,\n  make ,\n  $$default ,\n  $$default as default,\n  \n}\n/* theme Not a pure module */\n","import ResetPassword from '/lib/es6/src/pagesComponents/ResetPassword.bs'\n\nexport default ResetPassword;\n"],"names":["theme","Styles","Theme$Weblab","loginReducer","state","action","password","secondPassword","TAG","_0","ResetPassword","Props","$$location","location","match","React","resetDispatch","reset","match$1","setResetAlert","resetAlert","match$2","setAccessToken","accessToken","match$3","setLoading","params","URLSearchParams","hash","replace","access_tokenOption","get","typeOption","Curry","param","children","ReactHelmet","href","rel","type","undefined","Core","style","bottom","left","position","right","top","height","margin","width","align","color","variant","fontWeight","marginBottom","clone","Weblab_logoSvg","palette","secondary","main","display","onSubmit","evt","preventDefault","LoginBase$Weblab","SupabaseClient$Weblab","then","response","error","Promise","resolve","reject","Js_exn","message","catch","Belt_Option","Caml_js_exceptions","prim","control","label","labelPlacement","onChange","currentTarget","value","disabled","alignItems","flexDirection","gridGap","displayName"],"sourceRoot":""}